name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential ccache git zip unzip \
          openjdk-17-jdk python3-pip python3-setuptools \
          python3-wheel python3-virtualenv libffi-dev \
          libssl-dev libsqlite3-dev libjpeg-dev zlib1g-dev \
          libncurses6 libstdc++6
        sudo apt-get install -y autoconf automake libtool
        sudo apt-get install -y libtool autotools-dev automake autoconf

    - name: Prepare libffi build
      run: |
        echo "Searching for autogen.sh in home and repo..."
        find $HOME -name autogen.sh
        find . -name autogen.sh
    
        # Set the directory containing autogen.sh
        dir=$(find . -name autogen.sh -exec dirname {} \; | head -n 1)
    
        # Check if the directory was found
        if [ -z "$dir" ]; then
          echo "autogen.sh not found"
          exit 1
        fi
    
        echo "Found autogen.sh in: $dir"
        cd "$dir"
        ./autogen.sh
        libtoolize --force --copy
        aclocal
        autoconf
        automake --add-missing
        ./configure
    
    - name: Export ANDROID_HOME and PATH
      run: |
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Install buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Set ANDROID_HOME and install SDK Command-line tools
      run: |
        # Create the necessary directory structure
        mkdir -p "$HOME/.buildozer/android/platform"
        cd "$HOME/.buildozer/android/platform"
    
        # Download and unzip command-line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip
    
        
        mkdir -p android-sdk/cmdline-tools/latest
    
        # Move extracted files into the 'latest' directory
        mv cmdline-tools/* android-sdk/cmdline-tools/latest/
    
        # Export environment variables
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
    
        # Accept licenses and install essential packages
        ln -s $PWD/android-sdk/cmdline-tools/latest $PWD/android-sdk/tools
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
          "platform-tools" \
          "build-tools;33.0.2" \
          "platforms;android-33"
    
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    - name: Build APK
      run: buildozer android debug

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: galaxy-game-apk
        path: bin/*.apk
