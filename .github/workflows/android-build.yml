name: Build Kivy APK

# Trigger manually using GitHub UI
on:
  workflow_dispatch:  # This allows manual triggering from GitHub U
  
jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Checkout repository contents

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'  # Specify the Python version used in your project

    - name: Install Buildozer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-setuptools python3-wheel
        sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev
        sudo apt-get install -y python3-venv
        pip install --upgrade pip
        pip install cython
        pip install buildozer  # Install buildozer to build the APK

    - name: Install Android dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-8-jdk
        sudo apt-get install -y git
        sudo apt-get install -y libncurses5-dev libstdc++6 lib32z1 libbz2-1.0
        
    - name: Install AIDL
      run: |
        sudo apt update
        sudo apt install -y wget unzip
        mkdir -p $HOME/Android/Sdk/cmdline-tools
        
        # Download and unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O commandlinetools.zip
        unzip commandlinetools.zip -d $HOME/Android/Sdk/cmdline-tools

        # Rename to avoid nested cmdline-tools/cmdline-tools structure
        mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest

        # Export correct paths
        export ANDROID_HOME=$HOME/Android/Sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        export PATH=$ANDROID_HOME/platform-tools:$PATH

        # Verify sdkmanager is now available
        echo "Checking sdkmanager path:"
        which sdkmanager
        echo "Sdkmanager version:"
        sdkmanager --version

        # Accept licenses and install the required components
        echo "Accepting licenses and installing components..."
        yes | sdkmanager --licenses

        # Install required tools and AIDL
        sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30"

        # Verify AIDL availability in build-tools
        ls $ANDROID_HOME/build-tools/30.0.3/

        # Check if AIDL is now installed
        which aidl || echo "AIDL not found"
        aidl --version
        
    - name: Configure Buildozer
      run: |
        # Optional: You can modify buildozer.spec before running the build.
        echo "Custom buildozer config adjustments go here if needed"

    - name: Build APK with Buildozer
      run: |
        buildozer android debug  # This triggers Buildozer to start building the APK

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: galaxy-apk
        path: bin/galaxy-debug.apk  # Adjust this to match where your APK is store
